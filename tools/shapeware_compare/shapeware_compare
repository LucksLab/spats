#!/bin/bash

script_name=`basename $0`

if [ $# -ne 1 ]; then
    echo "usage: $script_name test.json"
    exit -1
fi
if [ ! -f "$1" ]; then
    echo "file not found: $1"
    exit -1
fi

json="$1"

shapeware="~/Repos/shapeware/analyze_shape-map.py"
spats="PYTHONPATH=~/Repos/spats ~/Repos/spats/bin/spats_tool"

spats_dir=$(mktemp -d /tmp/${script_name}_XXXX)
echo "created $spats_dir"

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

if [ -f spats.config ]; then
    cp spats.config "$spats_dir"
else
    cp "$script_dir/spats.config" "$spats_dir"
fi

cp "$json" "$spats_dir"

grep targets "$json" | sed 's:.*{[[:space:]]*"\(.*\)"\:[[:space:]]*"\(.*\)"[[:space:]]*}.*:>\1\'$'\n''\2:' > "${spats_dir}/target.fa"


write_fastq() {
    fastq=$1
    key=$2
    rdi=$3
    pair=$4
    rd=`grep "\"${key}\"" "$json" | awk -F: '{print $2;}' | sed 's:[", ]::g'`
    if [[ "$rdi" -eq "1"  &&  "$pair" -eq "2" ]]; then
        mask=`echo $rd | sed 's:^\(.\{4\}\).*$:\1:' | tr "[ACGT]" "[TGCA]"`
        rd=`echo $rd | sed 's:^\(.\{4\}\)\(.*\)$:\2:'`
        rd="$mask""$rd"
    fi
    echo "@M05164:58:000000000-BW2LP:1:1101:1392${pair}:502${pair} ${rdi}:N:0:TAGCTT" >> "$fastq"
    echo "$rd" >> "$fastq"
    echo "+" >> "$fastq"
    grep "${key}_quality" "$json" | awk -F: '{print $2;}' | sed 's:[", ]::g' >> "$fastq" 
}

touch "$spats_dir/test_S3_L001_R1_001.fastq"
touch "$spats_dir/test_S3_L001_R2_001.fastq"
for i in 1 2; do
    fastq="$spats_dir/test_S3_L001_R${i}_001.fastq"
    write_fastq "$fastq" "r${i}" $i 0
    # always include one good of each handle for denominators not to be 0
    for m in 1 2; do
        write_fastq "$fastq" "r${i}_good" $i $m
    done
done


pushd "$spats_dir" > /dev/null

eval "${spats}" to_shapeware shapeware

eval "${spats}" show "$json"

if [ -f "/miniconda3/etc/profile.d/conda.sh" ]; then
    . "/miniconda3/etc/profile.d/conda.sh"
    CONDA_CHANGEPS1=false conda activate base
else
    \export PATH="/miniconda3/bin:$PATH"
fi

source activate shapeware

echo "Running $shapeware shapeware..."
eval "$shapeware" shapeware > shapeware.log 2>&1

popd > /dev/null

if [ ! -f "$spats_dir/shapeware/output/agg_coverage_bwa-mem.csv" ]; then
    echo "SHAPEware error occurred.  See $spats_dir/shapeware.log."
    exit -1
fi

output_filebase="${json%.*}"
cp "$spats_dir/shapeware/output/agg_coverage_bwa-mem.csv" "${output_filebase}.csv"
cp "$spats_dir/shapeware/temp/mutation_rates/bwa-mem/RRRY-test_mut_identities.txt" "${output_filebase}_muts.txt"
cp "$spats_dir/shapeware/plots/mut_identities/RRRY-test_YYYR-test_YYYR-test_bwa-mem_mutations.pdf" "${output_filebase}.pdf"
open "${output_filebase}.pdf"
#rm -rf $spats_dir

